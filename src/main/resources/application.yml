# 所有环境通用的配置，放在这里

# 运行环境、端口
spring.profiles.active: prod
server.port: 7001
spring.application.name: tdx-quant


# 404 交给异常处理器处理
spring.mvc.throw-exception-if-no-handler-found: true
spring.web.resources.add-mappings: false


# Actuator
management.endpoints.web.exposure.include: '*'         # 开放所有     ->     暴露所有 Actuator 端点给 Admin Server (也就是它自己)
management.endpoint.health.show-details: ALWAYS        # 显示详细的健康信息
management.endpoint.shutdown.enabled: true             # 如需 /shutdown
management.metrics.export.prometheus.enabled: true     # 如需 /prometheus


# Admin Client
spring.boot.admin.client.url: http://localhost:7001                    # 注册到 Admin Server 的地址
spring.boot.admin.client.instance.name: ${spring.application.name}     # 可选，指定实例名称
spring.boot.admin.client.enabled: false                                # Client 开关（与 @EnableAdminServer 开关  保持一致）





# MyBatis-Plus 配置
mybatis-plus:
  # Mapper XML 文件位置
  mapper-locations: "classpath*:mapper/**/*.xml"
  # 实体类包路径
  type-aliases-package: com.bebopze.tdx.quant.dal.entity
  configuration:
    # 下划线转驼峰
    map-underscore-to-camel-case: true
    # SQL日志
    # 通过 Log4j2 输出日志
    log-impl: org.apache.ibatis.logging.log4j2.Log4j2Impl
    # 绕过日志框架，直接打印到 控制台（System.out），无法控制（即使你设 logging.level=ERROR，它依然打印）
    # 快速调试（临时用）
    # log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

  # 全局配置
  global-config:
    banner: true
    db-config:
      # ID生成策略
      id-type: auto
      logic-delete-value: 1
      logic-not-delete-value: 0
      field-strategy: not_empty
      table-underline: true
      logic-delete-field: deleted



# log4j2
logging.config: "classpath:log4j2.xml"



# springdoc
springdoc.api-docs.path: "/v3/api-docs"
springdoc.swagger-ui.path: "/swagger-ui.html"



# 通达信-根目录
tdx-path: "C:/soft/通达信/v_2024/跑数据专用/new_tdx"